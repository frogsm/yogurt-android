def versions = [:]
// gradle
versions.gradle = '4.1.0'

// kotlin
versions.kotlin = '1.4.10'

// Coroutines
versions.coroutines = '1.3.5'

// androidx
versions.core = '1.3.2'
versions.appcompat = '1.2.0'
versions.activity = '1.1.0'
versions.fragment = '1.2.5'
versions.lifecycle = '2.2.0'
versions.viewpager = '1.0.0'
versions.navigation = '2.3.0'
versions.constraint_layout = '2.0.2'

// test
versions.junit = '4.13.1'
versions.ext_junit = '1.1.2'
versions.espresso = '3.3.0'

// hilt
versions.hilt = '2.29.1-alpha'
versions.hilt_androidx_compiler = '1.0.0-alpha02'
versions.hilt_androidx_lifecycle_viewmodel = '1.0.0-alpha02'

// etc
versions.material = '1.2.1'
versions.dagger = '2.29.1'
versions.retrofit = '2.9.0'
versions.okhttp = '4.9.0'
versions.moshi = '1.11.0'
versions.glide = '4.11.0'
versions.realm = '6.0.2'

ext.versions = versions


def build_versions = [:]
build_versions.code = 1
build_versions.name = "1.0"

build_versions.min_sdk = 22
build_versions.target_sdk = 30
build_versions.compile_sdk = 30
build_versions.build_tools = "30.0.2"
ext.build_versions = build_versions


def deps = [:]


def plugin = [:]
plugin.android = "com.android.tools.build:gradle:$versions.gradle"
plugin.kotlin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
plugin.navigation = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
plugin.realm = "io.realm:realm-gradle-plugin:$versions.realm"
plugin.hilt = "com.google.dagger:hilt-android-gradle-plugin:$versions.hilt"
deps.plugin = plugin


def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
deps.kotlin = kotlin


def coroutines = [:]
coroutines.core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
deps.coroutines = coroutines


def androidx = [:]
androidx.core_ktx = "androidx.core:core-ktx:$versions.core"
androidx.appcompat = "androidx.appcompat:appcompat:$versions.appcompat"
androidx.activity_ktx = "androidx.activity:activity-ktx:$versions.activity"
androidx.fragment_ktx = "androidx.fragment:fragment-ktx:$versions.fragment"
androidx.lifecycle_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
androidx.lifecycle_java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
androidx.viewpager = "androidx.viewpager2:viewpager2:$versions.viewpager"
androidx.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
androidx.hilt = "androidx.hilt:hilt-lifecycle-viewmodel:$versions.hilt_androidx_lifecycle_viewmodel"
androidx.hilt_compiler = "androidx.hilt:hilt-compiler:$versions.hilt_androidx_compiler"
deps.androidx = androidx


def navigation = [:]
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
deps.navigation = navigation


def test = [:]
test.junit = "junit:junit:$versions.junit"
test.ext_junit = "androidx.test.ext:junit:$versions.ext_junit"
test.espresso = "androidx.test.espresso:espresso-core:$versions.espresso"
deps.test = test


def hilt = [:]
hilt.android = "com.google.dagger:hilt-android:$versions.hilt"
hilt.android_compiler = "com.google.dagger:hilt-android-compiler:$versions.hilt"
deps.hilt = hilt


def material = [:]
material.base = "com.google.android.material:material:$versions.material"
deps.material = material


def dagger = [:]
dagger.base = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.compiler_processor = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger


def retrofit = [:]
retrofit.base = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.convert_moshi = "com.squareup.retrofit2:converter-moshi:$versions.retrofit"
deps.retrofit = retrofit


def okhttp = [:]
okhttp.logging_interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
deps.okhttp = okhttp


def moshi = [:]
moshi.kotlin = "com.squareup.moshi:moshi-kotlin:$versions.moshi"
moshi.kotlin_codegen = "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshi"
deps.moshi = moshi


def glide = [:]
glide.base = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

// apply
ext.deps = deps